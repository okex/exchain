name: ci-exchain-ut

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]


jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: go mod tidy
        run:
          go mod tidy -compat=1.17
      - name: Cache go modules
        run:
          make go-mod-cache
      - name: Build
        run:
          make build
  app:
    name: app ut
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Run Test exchain/app
        run: |
          set -ex
          codePath="./app/..."
          package_lines=`go list ${codePath}`
          cover_pkgs=`echo ${package_lines[@]} | sed 's/ /,/g'`
          go list ${codePath} |xargs go test -mod=readonly -coverpkg=${cover_pkgs} -timeout 8m -coverprofile=coverage.data -covermode=atomic

      - name: Upload code coverage
        run: |
          set -ex
          echo "mode: atomic" > coverage.txt
          tail -n +2 coverage.data >> coverage.txt
          bash <(curl -s https://codecov.io/bash) -f coverage.txt 
  libs:
    name: libs ut
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Go Test exchain/libs
        run: |
          set -ex
          codePath="./libs/..."
          go list ${codePath} |xargs go test -mod=readonly -timeout 10m -coverprofile=coverage.data -covermode=atomic -tags='norace ledger test_ledger_mock'
      - name: Upload code coverage
        run: |
          set -ex
          echo "mode: atomic" > coverage.txt
          tail -n +2 coverage.data >> coverage.txt
          bash <(curl -s https://codecov.io/bash) -f coverage.txt 
  x:
    name: x ut
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Run Test exchain/x
        run: |
          set -ex
          codePath="./x/..."
          go list ${codePath} |xargs go test -mod=readonly -timeout 8m -coverprofile=coverage.data -covermode=atomic 
      - name: Upload code coverage
        run: |
          set -ex
          echo "mode: atomic" > coverage.txt
          tail -n +2 coverage.data >> coverage.txt
          bash <(curl -s https://codecov.io/bash) -f coverage.txt 


  
